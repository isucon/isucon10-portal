name: portal
on: 
  push:
    paths:
      - 'portal/**'
      - '.github/workflows/portal.yml'
    branches:
      - master

env:
  DOCKER_REPO: '516315029474.dkr.ecr.ap-northeast-1.amazonaws.com/isuxportal'

jobs:
  build:
    name: portal-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: portal
    steps:
      - uses: actions/checkout@master
      - run: 'echo $GITHUB_SHA > REVISION'

      - name: Enable docker experimental features and qemu-user-static binfmt_misc entries
        run: |
          mkdir -p ~/.docker
          echo '{"experimental": "enabled"}' > ~/.docker/config.json
          sudo docker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes --credential yes


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - run: "docker pull ${DOCKER_REPO}:latest-amd64 || :"
      - run: "docker pull ${DOCKER_REPO}:latest-arm64 || :"
      - run: "docker pull ${DOCKER_REPO}:builder-amd64 || :"
      - run: "docker pull ${DOCKER_REPO}:builder-arm64 || :"
      - run: "docker pull ${DOCKER_REPO}:assets-builder || :"

      - run: "docker build --pull --platform linux/amd64 --cache-from ${DOCKER_REPO}:assets-builder -t ${DOCKER_REPO}:assets-builder --target assets-builder -f Dockerfile ."

      - run: "docker build --pull --platform linux/amd64 --cache-from ${DOCKER_REPO}:assets-builder --cache-from ${DOCKER_REPO}:builder-amd64 --target builder -t ${DOCKER_REPO}:builder-amd64 -f Dockerfile ."
      #- run: "docker build --pull --platform linux/arm64 --cache-from ${DOCKER_REPO}:assets-builder --cache-from ${DOCKER_REPO}:builder-arm64 --target builder -t ${DOCKER_REPO}:builder-arm64 -f Dockerfile ."

      - run: "docker build --pull --platform linux/amd64 --cache-from ${DOCKER_REPO}:assets-builder --cache-from ${DOCKER_REPO}:builder-amd64 --cache-from ${DOCKER_REPO}:latest-amd64 -t ${DOCKER_REPO}:${GITHUB_SHA}-amd64 -f Dockerfile ."
      #- run: "docker build --pull --platform linux/arm64 --cache-from ${DOCKER_REPO}:assets-builder --cache-from ${DOCKER_REPO}:builder-arm64 --cache-from ${DOCKER_REPO}:latest-arm64 -t ${DOCKER_REPO}:${GITHUB_SHA}-arm64 -f Dockerfile ."

      - name: docker-push
        run: |
          set -x
          docker tag ${DOCKER_REPO}:${GITHUB_SHA}-amd64 ${DOCKER_REPO}:latest-amd64
          #docker tag ${DOCKER_REPO}:${GITHUB_SHA}-arm64 ${DOCKER_REPO}:latest-arm64
          docker push ${DOCKER_REPO}:${GITHUB_SHA}-amd64
          #docker push ${DOCKER_REPO}:${GITHUB_SHA}-arm64
          docker push ${DOCKER_REPO}:builder-amd64
          #docker push ${DOCKER_REPO}:builder-arm64
          docker push ${DOCKER_REPO}:latest-amd64
          #docker push ${DOCKER_REPO}:latest-arm64
          docker push ${DOCKER_REPO}:assets-builder

      - name: docker-manifest-push
        run: |
          set -x
          for repo in ${DOCKER_REPO}; do
            docker manifest create --amend ${repo}:${GITHUB_SHA} ${repo}:${GITHUB_SHA}-amd64 #${repo}:${GITHUB_SHA}-arm64
            docker manifest push ${repo}:${GITHUB_SHA}
            docker manifest create --amend ${repo}:latest ${repo}:${GITHUB_SHA}-amd64 #${repo}:${GITHUB_SHA}-arm64
            docker manifest push ${repo}:latest
          done
